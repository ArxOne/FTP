<# 
// input required here: Platform, Protocol
// actual tests are located in PlatformTest.cs (because this is much easier to write)

	PlatformPrefix = Platform.Substring(0,1).ToUpper() + Platform.Substring(1).ToLower();
	ProtocolPrefix = Protocol.Substring(0,1).ToUpper() + Protocol.Substring(1).ToLower();
	Prefix = PlatformPrefix + ProtocolPrefix;
	ProtocolCategory = Protocol.ToUpper();
#>

namespace ArxOne.FtpTest
{
    using Microsoft.VisualStudio.TestTools.UnitTesting;

	[TestClass]
    public class <#=Prefix#>PlatformTest
	{
		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>SpaceNameTest()
		 {
			PlatformTest.SpaceNameTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>BracketNameTest()
		 {
			PlatformTest.BracketNameTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>ParenthesisNameTest()
		 {
			PlatformTest.ParenthesisNameTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>ListPassiveTest()
		 {
			PlatformTest.ListTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>", passive: true);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>ListActiveTest()
		 {
			PlatformTest.ListTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>", passive: false);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>ListNonExistingTest()
		 {
			PlatformTest.ListTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>", passive: true, directory: "/nonExistingDirectory");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>StatTest()
		 {
			PlatformTest.StatTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>StatNoDotTest()
		 {
			PlatformTest.StatNoDotTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>CreateFilePassiveTest()
		 {
			PlatformTest.CreateFileTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>", passive: true);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>CreateFileActiveTest()
		 {
			PlatformTest.CreateFileTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>", passive: false);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>MlstTest()
		 {
			PlatformTest.MlstTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>MlstEntryTest()
		 {
			PlatformTest.MlstEntryTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>MlsdTest()
		 {
			PlatformTest.MlsdTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "<#=ProtocolCategory#>")]
		 [TestMethod]
		 public void <#=Prefix#>MlsdEntriesTest()
		 {
			PlatformTest.MlsdEntriesTest(platform: "<#=Platform#>", protocol: "<#=Protocol#>");
		 }
	}
}

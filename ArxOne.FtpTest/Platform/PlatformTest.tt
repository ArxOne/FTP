<#@ template debug="false" hostspecific="false" language="C#" #>
<# // input required here: Platform
// actual tests are located in PlatformTest.cs (because this is much easier to write)

	var PlatformPrefix=Platform.Substring(0,1).ToUpper()+Platform.Substring(1).ToLower();
#>

namespace ArxOne.FtpTest.Platform
{
    using Microsoft.VisualStudio.TestTools.UnitTesting;

	[TestClass]
    public class <#=PlatformPrefix#>PlatformTest
	{
		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>SpaceNameTest()
		 {
			PlatformTest.SpaceNameTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>BracketNameTest()
		 {
			PlatformTest.BracketNameTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>ParenthesisNameTest()
		 {
			PlatformTest.ParenthesisNameTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>ListPassiveTest()
		 {
			PlatformTest.ListTest("<#=Platform#>", passive: true);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>ListActiveTest()
		 {
			PlatformTest.ListTest("<#=Platform#>", passive: false);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>StatTest()
		 {
			PlatformTest.StatTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>StatNoDotTest()
		 {
			PlatformTest.StatNoDotTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>CreateFilePassiveTest()
		 {
			PlatformTest.CreateFileTest("<#=Platform#>", passive: true);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>CreateFileActiveTest()
		 {
			PlatformTest.CreateFileTest("<#=Platform#>", passive: false);
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>MlstTest()
		 {
			PlatformTest.MlstTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>MlstEntryTest()
		 {
			PlatformTest.MlstEntryTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>MlsdTest()
		 {
			PlatformTest.MlsdTest("<#=Platform#>");
		 }

		 [TestCategory("Platform")]
		 [TestProperty("Platform", "<#=Platform#>")]
		 [TestProperty("Protocol", "FTP")]
		 [TestMethod]
		 public void <#=PlatformPrefix#>MlsdEntriesTest()
		 {
			PlatformTest.MlsdEntriesTest("<#=Platform#>");
		 }
	}
}
